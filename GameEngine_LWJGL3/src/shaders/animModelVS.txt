#version 150

const int MAX_JOINTS = 150;
const int MAX_WEIGHTS = 4;

in vec3 position;
in vec2 texCoords;
in vec3 normal;
in ivec4 jointIndices;
in vec4 weights;

out vec2 pass_texCoords;
out vec3 pass_normal;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

uniform mat4 jointTransforms[MAX_JOINTS];

void main(void)
{
	vec4 totalPos = vec4(0.0);
	vec4 normalPos = vec4(0.0);
	
	int count = 0;
	for(int i = 0; i < MAX_WEIGHTS; i++)
	{
		float weight = weights[i];
		if(weight > 0)
		{
			
			vec4 tempPos = jointTransforms[jointIndices[i]] * vec4(position,1.0);
			vec4 tempNormal = jointTransforms[jointIndices[i]] * vec4(normal,0.0);
			totalPos += tempPos * weight;
			normalPos += tempNormal * weight;
			count++;
		}
	}
	
	if(count == 0)
	{
		totalPos = vec4(position,1.0);
		normalPos = vec4(normal,0.0);
	}
	

	mat4 mvMatrix = viewMatrix * transformationMatrix;
	vec4 mvVertexPos = mvMatrix * totalPos;
	gl_Position =  projectionMatrix * mvVertexPos;
	pass_texCoords = texCoords;
	pass_normal = normalPos.xyz;
}